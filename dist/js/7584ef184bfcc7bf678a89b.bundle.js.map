{"version":3,"file":"js/7584ef184bfcc7bf678a89b.bundle.js","mappings":"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","sources":["webpack://una-webpack/./src/react-apps/components/SearchAdapter.tsx","webpack://una-webpack/./src/react-apps/components/SelectorNav/MultipleSelectionControl/Item.tsx","webpack://una-webpack/./src/react-apps/components/SelectorNav/MultipleSelectionControl/index.tsx","webpack://una-webpack/./src/react-apps/components/SelectorNav/Wrapper/index.tsx","webpack://una-webpack/./src/public/assets/images/round-loading.svg","webpack://una-webpack/./src/react-apps/components/una/Loading/index.tsx","webpack://una-webpack/./src/react-apps/layouts/components/AsideFilters/index.tsx","webpack://una-webpack/./src/react-apps/layouts/components/ContentGrid/index.tsx","webpack://una-webpack/./src/react-apps/layouts/components/ContentPool/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/FiltersNav.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/modals/CompanhiaView/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/CompaniesFeed/Item/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/CompaniesFeed/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/index.tsx","webpack://una-webpack/./src/services/api/companhias-service.ts"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport queryString from 'query-string'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\n\nexport namespace SearchAdapter {\n    export type Params = {\n        header:{\n            params?: string[],\n            search?: string[]\n        }\n    }\n}\n\nexport const UseSearchAdapter = ({ header }: SearchAdapter.Params )=>{\n\n    const history = useHistory(), match = useRouteMatch();\n    const [ parsedSearch, setParsedSearch] = useState<any>(null)\n    const [ parsedParams, setParsedParams ] = useState<any>(null) \n \n    useEffect(() => {\n        const [params, search] = parseUrl();\n        setParsedParams(params);\n        setParsedSearch(search);\n    }, [ location.search, location.pathname ])\n\n    const parseUrl = () => {\n        \n        var upcomming_params, upcomming_search: any = {}\n        var parsedSearch: any = queryString.parse(location.search);\n        var parsedParams: any = Object.assign({}, match.params);\n\n        const { search=[], params=[] } = header;\n        search.map((k,i)=>{\n            let value = parsedSearch[k] ?? [];\n            upcomming_search[k] = Array.isArray(value) ? value : [ value ]; \n        })\n        \n        params.map((k,i)=> upcomming_params = { [k]: parsedParams[k] ?? \"\" } ) \n\n        return [ upcomming_params, upcomming_search]\n\n    }\n\n\n    /* Append vai ignorar o header */\n    const appendToHistory = (struct: any,) => {\n        var parsedSearch: any = queryString.parse(location.search);\n        parsedSearch = { ...parsedSearch, ...struct}\n        history.replace({ search:  queryString.stringify(parsedSearch)}) \n    }\n\n    /* Push vai adicionar de acordo com hader */\n    const pushToHistory = (struct: any, clear: boolean= false ) => {\n        const [ parsedParams, parsedSearch ] = parseUrl()\n        var params_result = !clear ? {...parsedParams} : {},\n        search_result = !clear ? { ...parsedSearch } : {};\n        \n        /*  Vai filtrar os valores de struct que tiverem no header */\n        const { search=[], params=[] } = header;\n        Object.keys(struct).map((k: string,i)=>{\n            var value: any = struct[k];\n            if (params.includes(k)){\n                params_result[k]= value[0] ?? \"\"\n            } else if (search.includes(k)){\n                search_result[k]= value ?? []\n            }\n        })\n\n        var str_params = \"\"\n        Object.keys(params_result).map(p=> str_params+= \"/\"+  params_result[p] ?? \"\");\n        history.replace({ search:  queryString.stringify(search_result), pathname: `${match.path.split(\"/:\")[0]}${str_params}` }) \n    }\n    \n    return ({ parsedSearch, parsedParams, pushToHistory, appendToHistory })\n}\n\n\nexport default UseSearchAdapter","import React from 'react'\nimport { MultipleSelectionControl } from '.'\n\nexport namespace SelectorNavItem {\n    export type Params = {\n        item: MultipleSelectionControl.Item,\n        selected : boolean,\n        onClick: ( item: MultipleSelectionControl.Item) => void\n    }\n}\n\nexport const SelectorNavItem: React.FunctionComponent<SelectorNavItem.Params> = ({ item, selected, onClick }) =>{\n    const { label } = item\n    return (\n        <li onClick={() => onClick({...item})} className={`${selected === true? 'selected' : ''}`} >\n            <input readOnly type=\"checkbox\" checked={selected}></input> \n            <span>\n                {label}\n            </span>\n        </li>\n    )\n}\n\nexport default SelectorNavItem","import React, {useEffect, useState } from 'react'\nimport './style.css'\nimport Item from './Item'\nimport Wrapper, { SelectorNavWrapper } from '../Wrapper'\n\nexport namespace MultipleSelectionControl {\n    export type Item  = { value: string, label: string, parent_id?: string }\n    export interface Params extends Omit<SelectorNavWrapper.Params, 'children'> {\n        title: string,\n        icon?: any,\n        value?: any[],\n        items: Item[],\n        onChange: (arg:any) =>void,\n        max?: number,\n    }\n}   \n\nexport const MultipleSelectionControl: React.FunctionComponent<MultipleSelectionControl.Params> =  ({ value=[], icon, title, items, onChange, max=-1 }) =>{\n    \n    const [ list, setList ] = useState<any[]>(items)\n    useEffect(()=>{ setList([ ...items]) },[items]) \n\n    const handleClick = (item?: MultipleSelectionControl.Item) =>{\n\n        var s_items: any[] =[];\n\n        if (item) {\n\n            s_items = [ ...value ]; \n            \n            if ((max > 1) && ( s_items.length + 1 > max && ( (s_items.filter(b=>b.value==item.value)).length == 0  ) ) ) return \n            \n            if (max == 1) {  s_items = [] }  \n            \n            let sliced = s_items.filter((c:any)=> c.value !== item.value); \n            \n            s_items = sliced.length < s_items.length ? sliced : [ ...s_items, item ];\n            \n        }\n\n        onChange(s_items) \n    } \n\n    return (\n        <Wrapper icon={icon} title={title}>\n            <ul>\n                <Item item={{ label: \"Todos\", value: \"\" }} onClick={()=>handleClick()} selected={ value.length === 0 }></Item>\n                { \n                    list.map((c:any,i)=>{\n                        return ( \n                            <Item key={i} item={c} \n                                onClick={()=>handleClick(c)} \n                                selected={ value.map((s:any)=>s.value).includes(c.value) }> \n                            </Item> \n                        )\n                    })\n                }\n            </ul>\n        </Wrapper>\n    )\n}\n\nexport default MultipleSelectionControl\n","import React, { ReactNode, useEffect, useState } from 'react'\nimport './style.css'\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md'\n\nexport namespace SelectorNavWrapper {\n    export type Item  = { value: string, label: string, parent_id?:string }\n    export interface Params {\n        title:string,\n        icon?: any,\n        open_initial?: boolean,\n        children: ReactNode,\n        showCurtain?:boolean\n    }\n}   \n\nexport const SelectorNavWrapper: React.FunctionComponent<SelectorNavWrapper.Params> =  ({  title, icon, children, open_initial=true,showCurtain=true }) =>{\n    const [ open, setOpen ] = useState(open_initial);\n    return (\n        <nav className=\"nav-selector-wrapper\">\n            <div onClick={()=>setOpen(!open)} className=\"nav-selector-wrapper-title\"> { showCurtain && (!open ? <MdExpandMore/> : <MdExpandLess/>)}  {icon && icon} { title } </div>\n            <div className={`nav-selector-wrapper-body ${open ? 'open' : ''}`}>\n                { children }\n            </div>\n        </nav>\n    )\n}\n\nexport default SelectorNavWrapper\n","export default __webpack_public_path__ + \"img/round-loading.svg\";","import React from 'react'\nimport './style.css'\nimport LoadingSvg from \"@/public/assets/images/round-loading.svg\"\n\nexport const LoadingComponent: React.FunctionComponent<{fill?: boolean}> = ({fill = false}) =>{\n    return (\n        <div className={`una-default-loading ${fill ? \"una-default-loading-fill\" : \"\"}`}>\n            <img src={LoadingSvg}></img>\n        </div>\n    )\n}\n\nexport default LoadingComponent","import React, { useState, useEffect, ReactNode, useContext } from 'react'\nimport './style.css'\nimport { useWindowSize } from 'fck-components/lib/utils/hooks'\nimport { BlAsideLayout } from '@/react-apps/layouts/BlueLagum/AsideModal'\nimport { BlueLagumContext } from \"@/react-apps/layouts/BlueLagum\"\n\nexport namespace FiltersAsideNav {\n    export type Params = {\n        children?: ReactNode\n        allowedToShow?: boolean,\n        onChange?: any\n    }\n}\n\nexport const FiltersAsideNav: React.FunctionComponent<FiltersAsideNav.Params> = ({ children, allowedToShow = false, onChange }) => {\n\n    const { width } = useWindowSize()\n    const [ showFilters, setShowFilters ] = useState<boolean>(false)\n    const layoutContext = useContext(BlueLagumContext)\n    useEffect(()=>{ setShowFilters(allowedToShow) },[allowedToShow]);\n   \n    useEffect(()=>{\n        if(width > 960) layoutContext.asideFloat.setContent(null);\n        else {\n            if(showFilters) { layoutContext.asideFloat.setContent(()=>( \n                <BlAsideLayout title='Filtros' onClose={()=>onChange && onChange(-1)}>{children}</BlAsideLayout>)\n            )}\n            else { layoutContext.asideFloat.setContent(null) }\n        }\n    },[showFilters, width])\n\n    return (\n        <aside className={`filter-aside-nav ${!false ? \"\"  : \"filters-is-loading\"}`}>\n            {children}\n        </aside>  \n    )\n}\nexport default FiltersAsideNav\n\n","\nimport LoadingComponent from '@/react-apps/components/una/Loading'\nimport React, { ReactNode  } from 'react'\nimport './style.css'\n\nexport namespace ContentGrid {\n    export type Params = { \n        children: ReactNode ,\n        loading?: boolean\n    }\n}\n\nexport const ContentGrid: React.FunctionComponent<ContentGrid.Params> = ({ children, loading=false }) =>{\n    if(loading) return <div className='cg-grid-loading'> <LoadingComponent/> </div>\n    return (\n        <div id=\"departamento-content-grid\">\n            {\n                React.Children.map(children, (x,i) =>(\n                    <section className={`${loading ? \"una-gradiente-loading\" : \"\"}`}> {x} </section> \n                ))\n            }       \n        </div>\n    )\n}\n\nexport default ContentGrid","import React, { ReactNode, useEffect, useRef, useState } from 'react'\nimport './style.css'\nimport { AiOutlineArrowLeft, AiOutlineArrowRight} from 'react-icons/ai'\nimport { ListingView } from '@/domain/views/ListingView'\n\nexport namespace ContentPool {\n    export type Params = {\n        itemComponent: React.FunctionComponent<any>,\n        list_data: ListingView<any, any>,\n        onAction: (key:string, payload?: any)=>void,\n        initial_mode?: ListMode\n        dataAlias?:string,\n        header?: (queries: any) => React.ReactNode\n        auxHeader?: (queries: any) => React.ReactNode\n    }\n}\n\nexport type ListMode = \"inline\" | \"block\" \n \nexport const PageNavigator = ({ pages=1, index, onClick}: {onClick:any, pages: number, index: number}) =>{\n    return (\n        <div className='page-navigator-section'>\n            <button disabled={index == 1} className='page-navigator-btn' onClick={()=>onClick(index-1)}> <AiOutlineArrowLeft/> </button>\n            { [ ...Array(pages)].map((p, i)=>{\n                return ( <button onClick={()=>onClick(i+1)} key={i}\n                    className={`page-navigator-btn ${ (index == i+1) ? \"selected\": \"\"}`}>{i + 1}</button>)\n            })}\n            <button disabled={index == pages } className='page-navigator-btn' onClick={()=>onClick(index+1) } > <AiOutlineArrowRight/> </button>\n        </div>\n    )\n}\n\nexport const ContentPool: React.FunctionComponent<ContentPool.Params> = ({ header, auxHeader, dataAlias, list_data, itemComponent: ItemComponent, onAction, initial_mode=\"block\" }) =>{\n\n    const [ listMode, setListMode ] = useState<ListMode>(initial_mode)\n    const { pageIndex, pages, queries, total, length } = list_data\n    const [ poolData, setPoolData] = useState<any>([])\n\n    useEffect(()=>{\n        var data = dataAlias ? list_data.data[dataAlias] : list_data.data\n        setPoolData(data)\n    },[list_data])\n\n    return (\n        <div className=\"bl-common-content-pool\">\n\n            <header>\n                <section>  \n                    { header && header(queries)}\n                </section>\n                <section>\n                    <nav>\n                        { auxHeader && auxHeader(queries) }\n                        <button onClick={()=>setListMode(\"block\")}> &#10066; </button>\n                        <button onClick={()=>setListMode(\"inline\")}> \t&equiv; </button>\n                    </nav>\n                </section>\n            </header>\n\n            <main>\n                <section className={`bl-common-content-pool-flow ${listMode}`}>   \n                    {\n                        poolData.length > 0 && poolData.map( (d: any, i: number) =>{\n                            return (<ItemComponent listMode={listMode} key={i} item_data={d} onClick={onAction}></ItemComponent> )\n                        })\n                    }\n                </section>\n                <section> <PageNavigator pages={pages} index={pageIndex} onClick={(index: number) => {onAction(\"SET_PAGE\", index)}} />  </section> \n            </main>\n        </div>\n    )\n}\n\nexport default ContentPool\n\n/* { pageIndex < pages && <button className='bl-common-content-plus-btn' onClick={()=>onAction(\"+1\", Number(pageIndex+1))}>\n<AiOutlinePlus></AiOutlinePlus>\n</button>} */","import react, { useEffect, useState } from 'react'\nimport AsideFilters from '@/react-apps/layouts/components/AsideFilters'\nimport React from 'react'\nimport MultipleSelectionControl from '@/react-apps/components/SelectorNav/MultipleSelectionControl'\n\nexport namespace CompanhiasFiltersNav {\n    export type Params = { values: any, onChange: any, company_id: string }\n}\n\nconst STATUS_LIST = [ { value: \"1\", label: \"Ativo\"}, { value: \"0\", label: \"Inativo\"} ]\n\nexport const CompanhiasFiltersNav: React.FunctionComponent<CompanhiasFiltersNav.Params> = ({ values, company_id, onChange}) =>{\n    return (\n        <AsideFilters>\n            { (!values) ? ( <span> Carregando... </span> ) :(\n                <MultipleSelectionControl \n                    title=\"Status\" items={STATUS_LIST} max={1} \n                    value={ values[\"status\"].map((v:string)=>({value: v}))}\n                    onChange={(payload: any)=>onChange({ status: payload.map((v:any)=>v.value)})} >\n                </MultipleSelectionControl>  \n            )}\n        </AsideFilters>\n  )\n}\n\nexport default CompanhiasFiltersNav\n\n","import React, { useEffect, useState } from 'react'\nimport './style.css'\nimport { Forming } from \"fck-react-input-controls\"\nimport { companhiasServices } from '@/services/api/companhias-service'\nimport { Companhia } from '@/domain/views/Company'\nexport namespace CompanhiasView {\n    export type Params = { \n        companhia_id: string\n    }\n}\n\nexport const CompanhiasView: React.FunctionComponent<CompanhiasView.Params> = ({ companhia_id }) =>{\n    const [ companhia, setCompanhia] = useState<Companhia | null>(null)\n    useEffect(()=>{\n        companhiasServices.find(companhia_id).then(setCompanhia)\n    },[companhia_id])\n\n    return (\n        <div className='companhia-view-modal'>\n            { companhia === null ? \"loading...\" : \n            <React.Fragment>\n                <section className=\"companhia-view-modal-header\">\n                    <img></img>\n                    <div className='flex-column'>\n                    <Forming.LabelWrapper label='Nome Fantasia'>{companhia.nomeFantasia}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Razão Social'>{companhia.razaoSocial}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='CNPJ'>{companhia.cnpj}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='E-mail Financeiro'>{companhia.emailFinanceiro}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Telefone Comercial'>{companhia.telefoneComercial}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Incrição Estadual'>{companhia.inscricaoEstadual}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='status'>{companhia.ativo ? \"Ativo\": \"Inativo\"}</Forming.LabelWrapper>\n                </div> \n                </section>\n            </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default CompanhiasView","import React from 'react'\nimport './style.css'\nimport { AiOutlineShop } from 'react-icons/ai'\nimport { BiBadgeCheck } from 'react-icons/bi'\nimport { MdBlock } from 'react-icons/md'\n\nexport type ListMode = \"inline\" | \"block\" \n\nexport namespace ListViewItem {\n    export type Params = {\n        onClick: (key:string, item_data:any) =>void\n        item_data: any,\n        listMode: ListMode\n    }\n}\n\nexport const ListViewItem: React.FunctionComponent<ListViewItem.Params> = ({ onClick, item_data, listMode }) =>{\n\n    const { id, nomeFantasia, telefoneComercial, ativo } = item_data\n    return (\n        <div className={`list-view-item ${listMode}`} onClick={()=>onClick(\"OPTIONS\",id)}>\n            <div className=\"list-view-item-content\">\n                <section className=\"list-view-item-icon\">\n                    <AiOutlineShop></AiOutlineShop>\n                </section>\n\n                <section>\n                    <span className=\"list-view-item-name\">{nomeFantasia} - {telefoneComercial} </span> \n                </section>\n\n                <section>\n                    <div className={`list-view-item-name-status-badge ${ativo ?\"ativo\": \"inativo\"}`}>\n                        {ativo == true ?   <BiBadgeCheck/>   :<MdBlock/>  }\n                    </div>\n                </section> \n            </div>\n        </div>\n    )\n}\n\nexport default ListViewItem","import React, { useEffect, useState } from 'react'\nimport './style.css'\n\nimport ContentPool from '@/react-apps/layouts/components/ContentPool'\nimport CompanyItem from './Item'\nimport { useSelector } from 'react-redux'\n\nexport namespace CompaniesFeed {\n    export type onAction = any\n}\n\nexport const CompaniesFeed: React.FunctionComponent<any> = ({ onAction }) =>{\n    const companies : any = useSelector<any>(state => state.companies)\n    \n    return (\n        <div className=\"una-product-feed\">\n            <ContentPool \n                initial_mode=\"inline\"\n                itemComponent={CompanyItem} \n                list_data={companies} \n                dataAlias={\"companies\"}\n                onAction={onAction}>\n            </ContentPool>  \n        </div>\n    )\n}\n\nexport default CompaniesFeed\n\n\n","import React, { useContext, useDebugValue, useEffect, useState } from 'react'\nimport ContentGrid from '@/react-apps/layouts/components/ContentGrid'\nimport FiltersNav from './FiltersNav'\nimport { GlobalContext } from \"@/react-apps/apps/GlobalContext\"\nimport { MakeDialogConfig, MakeOptions }  from 'fck-react-dialog'\nimport CompanhiaViewModal from './modals/CompanhiaView'\nimport { useDispatch } from 'react-redux'\nimport { setCompanhias } from '@/react-apps/store/reducers/companies'\nimport UseSearchAdapter from '@/react-apps/components/SearchAdapter'\nimport { companhiasServices } from '@/services/api/companhias-service'\nimport CompaniesFeed from './CompaniesFeed'\n\nexport const SEARCH_HEADER= {\n  params: [ \"company_id\" ],\n  search: [ \"status\", \"v\", \"p\"]\n};\n\nexport const ListCompanhiasPage: React.FunctionComponent<any> = ({location, history}) => {\n\n    const dispatch = useDispatch()\n    const context = useContext(GlobalContext)\n    const { parsedSearch, parsedParams, pushToHistory } = UseSearchAdapter({ header: SEARCH_HEADER })\n\n    useEffect(()=>{ if(parsedSearch){ handleLoad()} },[parsedSearch])\n   \n    useEffect(()=>{\n      if(!parsedParams?.company_id) return;\n      showCompanyModal();\n    },[parsedParams]) \n\n    const showCompanyModal = () =>{\n      context.dialog.push(MakeDialogConfig(()=><CompanhiaViewModal companhia_id={parsedParams?.[\"company_id\"]} />,()=>{\n        pushToHistory({\"company_id\": []});\n        return -1;\n      }, \"Companhias\"))\n    }\n\n    const handleLoad= () => { companhiasServices.list({ ...parsedSearch }).then( r => dispatch(setCompanhias(r, false))) }\n\n    const handleActions = (key: any, payload: any) =>{\n      console.log(payload)\n      switch(key){\n        case \"OPTIONS\": {\n          context.dialog.push(MakeOptions((n)=>{ \n            switch(n){\n              case 0:  pushToHistory({\"company_id\": [payload]}); break;\n              case 1:  history.push(`/perfil/companhias/${payload}`); break; \n            }\n            return -1;\n          }, [ {label: \"Visualizar\"}, {label: \"Abrir\"}]))\n        };break;\n        case \"SET_PAGE\": pushToHistory({'p': payload+\"\"});break;\n      }\n    }\n\n    return (\n        <div id=\"companhias-page\">\n          <div className='app-container'>\n              <ContentGrid>\n                   <FiltersNav onChange={pushToHistory} values={parsedSearch} company_id={parsedParams?.[\"company_id\"] ?? \"\"}/> \n                   <CompaniesFeed onAction={handleActions} > </ CompaniesFeed>\n              </ContentGrid>\n            </div> \n        </div>\n    )\n}\n\nexport default ListCompanhiasPage","import { global } from '@/services/global-keys'\nimport { MakeApiSettings, errorHandler } from './helpers'\n\nconst companhiasApi = MakeApiSettings({\n     base_url: `${global.base_url}/companies`,\n     errorHelper: errorHandler, \n     storage_key: global.user_storage_key\n})\n\nexport namespace CompanhiasServices {\n     export type ListParams = {\n          status?: string,\n          v?: string\n          p?: number\n     }\n}\n\nexport const companhiasServices = {\n     save: async (params: any) => {\n          const data = { ...params };\n          const METHOD = data.id ? \"PUT\" : \"POST\"\n          const URL = data.id ? `/${data.id}` : \"/\";\n          delete data.id\n          const resp = await companhiasApi.send({ method: METHOD, url: URL, data }) \n          return resp.data \n     },\n     list: async (params: Partial<CompanhiasServices.ListParams>) => {\n          const { v=\"\", p= 1, status=\"\"} = params \n          var query = `?p=${p}&v=${v}&ativo=${status}`\n          const { data } = await companhiasApi.send({ method: \"get\", url: `/${query}` }) \n          return data \n     },\n     find: async (id:string) => {\n          const { data } = await companhiasApi.send({ method: \"get\", url: `/${id}` }) \n          return data \n     }\n}\n\nexport const coverageServices = {\n\n     save: async (params: { id:number, cidades:string[]}[], company_id:string) => {\n          const data = { ufs: [...params] };\n          const resp = await companhiasApi.send({ \n               method: \"POST\",\n               url: `/${company_id}/coverage`, \n               data \n          }) \n          return resp.data \n     },\n\n     find: async (id:string) => {\n          const { data } = await companhiasApi.send({ \n               method: \"get\", \n               url: `/${id}/coverage` \n          }) \n          return data \n     }\n}"],"names":["SearchAdapter","header","history","useHistory","match","useRouteMatch","useState","parsedSearch","setParsedSearch","parsedParams","setParsedParams","useEffect","parseUrl","params","search","location","pathname","upcomming_params","upcomming_search","queryString","Object","assign","map","k","i","value","Array","isArray","pushToHistory","struct","clear","params_result","search_result","keys","includes","str_params","p","replace","path","split","appendToHistory","SelectorNavItem","item","selected","onClick","label","className","readOnly","type","checked","MultipleSelectionControl","icon","title","items","onChange","max","list","setList","handleClick","s_items","length","filter","b","sliced","c","key","s","SelectorNavWrapper","children","open_initial","showCurtain","open","setOpen","fill","src","LoadingSvg","FiltersAsideNav","allowedToShow","width","useWindowSize","showFilters","setShowFilters","layoutContext","useContext","BlueLagumContext","asideFloat","setContent","onClose","ContentGrid","loading","id","React","x","ContentPool","PageNavigator","pages","index","disabled","AiOutlineArrowLeft","AiOutlineArrowRight","auxHeader","dataAlias","list_data","ItemComponent","itemComponent","onAction","initial_mode","listMode","setListMode","pageIndex","queries","total","poolData","setPoolData","data","d","item_data","CompanhiasFiltersNav","STATUS_LIST","values","company_id","AsideFilters","v","payload","status","CompanhiasView","companhia_id","companhia","setCompanhia","companhiasServices","then","Forming","nomeFantasia","razaoSocial","cnpj","emailFinanceiro","telefoneComercial","inscricaoEstadual","ativo","ListViewItem","AiOutlineShop","CompaniesFeed","companies","useSelector","state","CompanyItem","SEARCH_HEADER","ListCompanhiasPage","dispatch","useDispatch","context","GlobalContext","UseSearchAdapter","handleLoad","showCompanyModal","dialog","push","MakeDialogConfig","CompanhiaView","r","setCompanhias","FiltersNav","console","log","MakeOptions","n","companhiasApi","MakeApiSettings","base_url","global","errorHelper","errorHandler","storage_key","CompanhiasServices","save","METHOD","URL","send","method","url","resp","query","find","ufs"],"sourceRoot":""}