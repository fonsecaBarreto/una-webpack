{"version":3,"file":"js/758fa191358f46e0f7c8f3d.bundle.js","mappings":"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","sources":["webpack://una-webpack/./src/react-apps/pages/companies-page/FiltersNav.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/modals/CompanhiaView/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/CompaniesFeed/Item/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/CompaniesFeed/index.tsx","webpack://una-webpack/./src/react-apps/pages/companies-page/index.tsx"],"sourcesContent":["import react, { useEffect, useState } from 'react'\nimport AsideFilters from '@/react-apps/layouts/components/AsideFilters'\nimport React from 'react'\nimport MultipleSelectionControl from '@/react-apps/components/SelectorNav/MultipleSelectionControl'\n\nexport namespace CompanhiasFiltersNav {\n    export type Params = { values: any, onChange: any, company_id: string }\n}\n\nconst STATUS_LIST = [ { value: \"1\", label: \"Ativo\"}, { value: \"0\", label: \"Inativo\"} ]\n\nexport const CompanhiasFiltersNav: React.FunctionComponent<CompanhiasFiltersNav.Params> = ({ values, company_id, onChange}) =>{\n    return (\n        <AsideFilters>\n            { (!values) ? ( <span> Carregando... </span> ) :(\n                <MultipleSelectionControl \n                    title=\"Status\" items={STATUS_LIST} max={1} \n                    value={ values[\"status\"].map((v:string)=>({value: v}))}\n                    onChange={(payload: any)=>onChange({ status: payload.map((v:any)=>v.value)})} >\n                </MultipleSelectionControl>  \n            )}\n        </AsideFilters>\n  )\n}\n\nexport default CompanhiasFiltersNav\n\n","import React, { useEffect, useState } from 'react'\nimport './style.css'\nimport { Forming } from \"fck-react-input-controls\"\nimport { companhiasServices } from '@/services/api/companhias-service'\nimport { Companhia } from '@/domain/views/Company'\nexport namespace CompanhiasView {\n    export type Params = { \n        companhia_id: string\n    }\n}\n\nexport const CompanhiasView: React.FunctionComponent<CompanhiasView.Params> = ({ companhia_id }) =>{\n    const [ companhia, setCompanhia] = useState<Companhia | null>(null)\n    useEffect(()=>{\n        companhiasServices.find(companhia_id).then(setCompanhia)\n    },[companhia_id])\n\n    return (\n        <div className='companhia-view-modal'>\n            { companhia === null ? \"loading...\" : \n            <React.Fragment>\n                <section className=\"companhia-view-modal-header\">\n                    <img></img>\n                    <div className='flex-column'>\n                    <Forming.LabelWrapper label='Nome Fantasia'>{companhia.nomeFantasia}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Razão Social'>{companhia.razaoSocial}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='CNPJ'>{companhia.cnpj}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='E-mail Financeiro'>{companhia.emailFinanceiro}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Telefone Comercial'>{companhia.telefoneComercial}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='Incrição Estadual'>{companhia.inscricaoEstadual}</Forming.LabelWrapper>\n                    <Forming.LabelWrapper label='status'>{companhia.ativo ? \"Ativo\": \"Inativo\"}</Forming.LabelWrapper>\n                </div> \n                </section>\n            </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default CompanhiasView","import React from 'react'\nimport './style.css'\nimport { AiOutlineShop } from 'react-icons/ai'\nimport { BiBadgeCheck } from 'react-icons/bi'\nimport { MdBlock } from 'react-icons/md'\n\nexport type ListMode = \"inline\" | \"block\" \n\nexport namespace ListViewItem {\n    export type Params = {\n        onClick: (key:string, item_data:any) =>void\n        item_data: any,\n        listMode: ListMode\n    }\n}\n\nexport const ListViewItem: React.FunctionComponent<ListViewItem.Params> = ({ onClick, item_data, listMode }) =>{\n\n    const { id, nomeFantasia, telefoneComercial, ativo } = item_data\n    return (\n        <div className={`list-view-item ${listMode}`} onClick={()=>onClick(\"OPTIONS\",id)}>\n            <div className=\"list-view-item-content\">\n                <section className=\"list-view-item-icon\">\n                    <AiOutlineShop></AiOutlineShop>\n                </section>\n\n                <section>\n                    <span className=\"list-view-item-name\">{nomeFantasia} - {telefoneComercial} </span> \n                </section>\n\n                <section>\n                    <div className={`list-view-item-name-status-badge ${ativo ?\"ativo\": \"inativo\"}`}>\n                        {ativo == true ?   <BiBadgeCheck/>   :<MdBlock/>  }\n                    </div>\n                </section> \n            </div>\n        </div>\n    )\n}\n\nexport default ListViewItem","import React, { useEffect, useState } from 'react'\nimport './style.css'\n\nimport ContentPool from '@/react-apps/layouts/components/ContentPool'\nimport CompanyItem from './Item'\nimport { useSelector } from 'react-redux'\n\nexport namespace CompaniesFeed {\n    export type onAction = any\n}\n\nexport const CompaniesFeed: React.FunctionComponent<any> = ({ onAction }) =>{\n    const companies : any = useSelector<any>(state => state.companies)\n    \n    return (\n        <div className=\"una-product-feed\">\n            <ContentPool \n                initial_mode=\"inline\"\n                itemComponent={CompanyItem} \n                list_data={companies} \n                dataAlias={\"companies\"}\n                onAction={onAction}>\n            </ContentPool>  \n        </div>\n    )\n}\n\nexport default CompaniesFeed\n\n\n","import React, { useContext, useDebugValue, useEffect, useState } from 'react'\nimport ContentGrid from '@/react-apps/layouts/components/ContentGrid'\nimport FiltersNav from './FiltersNav'\nimport { GlobalContext } from  \"@main/app\"\nimport { MakeDialogConfig, MakeOptions }  from 'fck-react-dialog'\nimport CompanhiaViewModal from './modals/CompanhiaView'\nimport { useDispatch } from 'react-redux'\nimport { setCompanhias } from '@/react-apps/store/reducers/companies'\nimport UseSearchAdapter from '@/react-apps/components/SearchAdapter'\nimport { companhiasServices } from '@/services/api/companhias-service'\nimport CompaniesFeed from './CompaniesFeed'\n\nexport const SEARCH_HEADER= {\n  params: [ \"company_id\" ],\n  search: [ \"status\", \"v\", \"p\"]\n};\n\nexport const ListCompanhiasPage: React.FunctionComponent<any> = ({location, history}) => {\n\n    const dispatch = useDispatch()\n    const context = useContext(GlobalContext)\n    const { parsedSearch, parsedParams, pushToHistory } = UseSearchAdapter({ header: SEARCH_HEADER })\n\n    useEffect(()=>{ if(parsedSearch){ handleLoad()} },[parsedSearch])\n   \n    useEffect(()=>{\n      if(!parsedParams?.company_id) return;\n      showCompanyModal();\n    },[parsedParams]) \n\n    const showCompanyModal = () =>{\n      context.dialog.push(MakeDialogConfig(()=><CompanhiaViewModal companhia_id={parsedParams?.[\"company_id\"]} />,()=>{\n        pushToHistory({\"company_id\": []});\n        return -1;\n      }, \"Companhias\"))\n    }\n\n    const handleLoad= () => { companhiasServices.list({ ...parsedSearch }).then( r => dispatch(setCompanhias(r, false))) }\n\n    const handleActions = (key: any, payload: any) =>{\n      console.log(payload)\n      switch(key){\n        case \"OPTIONS\": {\n          context.dialog.push(MakeOptions((n)=>{ \n            switch(n){\n              case 0:  pushToHistory({\"company_id\": [payload]}); break;\n              case 1:  history.push(`/perfil/companhias/${payload}`); break; \n            }\n            return -1;\n          }, [ {label: \"Visualizar\"}, {label: \"Abrir\"}]))\n        };break;\n        case \"SET_PAGE\": pushToHistory({'p': payload+\"\"});break;\n      }\n    }\n\n    return (\n        <div id=\"companhias-page\">\n          <div className='app-container'>\n              <ContentGrid>\n                   <FiltersNav onChange={pushToHistory} values={parsedSearch} company_id={parsedParams?.[\"company_id\"] ?? \"\"}/> \n                   <CompaniesFeed onAction={handleActions} > </ CompaniesFeed>\n              </ContentGrid>\n            </div> \n        </div>\n    )\n}\n\nexport default ListCompanhiasPage"],"names":["CompanhiasFiltersNav","STATUS_LIST","value","label","values","onChange","company_id","AsideFilters","MultipleSelectionControl","title","items","max","map","v","payload","status","CompanhiasView","companhia_id","useState","companhia","setCompanhia","useEffect","companhiasServices","then","className","Forming","nomeFantasia","razaoSocial","cnpj","emailFinanceiro","telefoneComercial","inscricaoEstadual","ativo","ListViewItem","onClick","item_data","listMode","id","AiOutlineShop","CompaniesFeed","onAction","companies","useSelector","state","ContentPool","initial_mode","itemComponent","CompanyItem","list_data","dataAlias","SEARCH_HEADER","params","search","ListCompanhiasPage","location","history","dispatch","useDispatch","context","useContext","GlobalContext","UseSearchAdapter","header","parsedSearch","parsedParams","pushToHistory","handleLoad","showCompanyModal","dialog","push","MakeDialogConfig","CompanhiaView","r","setCompanhias","ContentGrid","FiltersNav","key","console","log","MakeOptions","n"],"sourceRoot":""}